<?php
namespace Opencart\Application\Model\Install;
class Install extends \Opencart\System\Engine\Model {
	public function database($data) {
		$db = new \Opencart\System\Library\DB($data['db_driver'], html_entity_decode($data['db_hostname'], ENT_QUOTES, 'UTF-8'), html_entity_decode($data['db_username'], ENT_QUOTES, 'UTF-8'), html_entity_decode($data['db_password'], ENT_QUOTES, 'UTF-8'), html_entity_decode($data['db_database'], ENT_QUOTES, 'UTF-8'), $data['db_port']);

		// Structure
		$this->load->helper('db_schema');

		$tables = db_schema();

		foreach ($tables as $table) {
			$table_query = $db->query("SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = '" . $data['db_database'] . "' AND TABLE_NAME = '" . $data['db_prefix'] . $table['name'] . "'");

			if ($table_query->num_rows) {
				$db->query("DROP TABLE `" . $data['db_prefix'] . $table['name'] . "`");
			}

			$sql = "CREATE TABLE `" . $data['db_prefix'] . $table['name'] . "` (" . "\n";

			foreach ($table['field'] as $field) {
			
			//MySQL datatype do match with HANA datatypes
			switch ($field['type']) {
				case "text":
					$fieldtype = 'varchar(255)';
					break;

				case (strpos($field['type'], "int")):
					$fieldtype = 'int';
					break;

				case (strpos($field['type'], "tinyint")):
					$fieldtype = 'int';
					break;

				case (strstr($field['type'], "smallint")):
					$fieldtype = 'int';
					break;

				case "mediumtext":
					$fieldtype = 'varchar(255)';
					break;

				default:
				$fieldtype = $field['type'];	
				break;									
			}

			// top is resevered word in HANA DB
			switch ($field['name']) {
				case "top":
					$fieldname = 'topcat';
					break;
				default:
					$fieldname = $field['name'];
					break;				 	
			}				
				$sql .= "  `" . $fieldname . "` " . $fieldtype . (!empty($field['not_null']) ? " NOT NULL" : "") . (isset($field['default']) ? " DEFAULT '" . $db->escape($field['default']) . "'" : "") . (!empty($field['auto_increment']) ? " GENERATED BY DEFAULT AS IDENTITY" : "") . ",\n";
			}

			if (isset($table['primary'])) {
				$primary_data = [];

				foreach ($table['primary'] as $primary) {
					$primary_data[] = "`" . $primary . "`";
				}

				$sql .= "  PRIMARY KEY (" . implode(",", $primary_data) . "),\n";
			}
			$sql = rtrim($sql, ",\n") . "\n";
			$sql .= ");";
			$sql = str_replace("`", "",$sql);
			$db->query($sql);
		}

		// Data
		$lines = file(DIR_APPLICATION . 'opencart.sql', FILE_IGNORE_NEW_LINES);
		$final = "";
		if ($lines) {
			$sql = '';

			$start = false;

			foreach ($lines as $line) {
				if (substr($line, 0, 12) == 'INSERT INTO ') {
					$sql = '';

					$start = true;
				}

				if ($start) {
					$sql .= $line;
				}

				if (substr($line, -2) == ');') {
					$sql = str_replace("INSERT INTO `oc_", "INSERT INTO `" . $data['db_prefix'], $sql);
					//HANA does not support multiline insert in single line
					$sqlformat = str_replace("),", ");\n".substr($sql, 0, strpos($sql, "VALUES"))."VALUES", $sql);
					$sqlformat = $sqlformat."\n";
					$sqlformat = str_replace("`", "",$sqlformat);														
					$final .= $sqlformat;
					$start = false;
				}
			}	
		}
		$sqls = explode(");", $final);
        foreach($sqls as $sql) {
        $sql = trim($sql).");";
        $db->query($sql);
       }

		$db->query("SET CHARACTER SET utf8");

		//$db->query("DELETE FROM " . $data['db_prefix'] . "user WHERE user_id = '1'");
		$db->query("INSERT INTO " . $data['db_prefix'] . "user SET user_id = '1', user_group_id = '1', username = '" . $db->escape($data['username']) . "', salt = '', password = '" . $db->escape(password_hash(html_entity_decode($data['password'], ENT_QUOTES, 'UTF-8'), PASSWORD_DEFAULT)) . "', firstname = 'John', lastname = 'Doe', email = '" . $db->escape($data['email']) . "', status = '1', date_added = NOW()");
		
		//$db->query("DELETE FROM " . $data['db_prefix'] . "setting WHERE key = 'config_email'");
		$db->query("INSERT INTO " . $data['db_prefix'] . "setting SET code = 'config', key = 'config_email', value = '" . $db->escape($data['email']) . "'");
		//$db->query("DELETE FROM " . $data['db_prefix'] . "setting WHERE key = 'config_encryption'");
		$db->query("INSERT INTO " . $data['db_prefix'] . "setting SET code = 'config', key = 'config_encryption', value = '" . $db->escape(token(1024)) . "'");

		$db->query("UPDATE " . $data['db_prefix'] . "product SET viewed = '0'");

		$db->query("INSERT INTO " . $data['db_prefix'] . "api SET username = 'Default', key = '" . $db->escape(token(256)) . "', status = 1, date_added = NOW(), date_modified = NOW()");

		$api_id = $db->getLastId();

		//$db->query("DELETE FROM " . $data['db_prefix'] . "setting WHERE key = 'config_api_id'");
		$db->query("INSERT INTO " . $data['db_prefix'] . "setting SET code = 'config', key = 'config_api_id', value = '" . (int)$api_id . "'");

		// set the current years prefix
		$db->query("UPDATE " . $data['db_prefix'] . "setting SET value = 'INV-" . date('Y') . "-00' WHERE key = 'config_invoice_prefix'");
	}
}
